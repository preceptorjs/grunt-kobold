{"name":"Grunt-kobold","tagline":"Grunt: Grunt plugin for Kobold","body":"Grunt-Kobold\r\n===============\r\n\r\nGrunt plugin for Kobold\r\n\r\n\r\n[![Build Status](https://img.shields.io/travis/preceptorjs/grunt-kobold.svg)](http://travis-ci.org/preceptorjs/grunt-kobold)\r\n[![Coveralls Coverage](https://img.shields.io/coveralls/preceptorjs/grunt-kobold.svg)](https://coveralls.io/r/preceptorjs/grunt-kobold)\r\n[![Code Climate Grade](https://img.shields.io/codeclimate/github/preceptorjs/grunt-kobold.svg)](https://codeclimate.com/github/preceptorjs/grunt-kobold)\r\n\r\n[![NPM Version](https://badge.fury.io/js/grunt-kobold.svg)](https://www.npmjs.com/package/grunt-kobold)\r\n[![NPM License](https://img.shields.io/npm/l/grunt-kobold.svg)](https://www.npmjs.com/package/grunt-kobold)\r\n\r\n[![NPM](https://nodei.co/npm/grunt-kobold.png?downloads=true&stars=true)](https://www.npmjs.com/package/grunt-kobold)\r\n[![NPM](https://nodei.co/npm-dl/grunt-kobold.png?months=3&height=2)](https://www.npmjs.com/package/grunt-kobold)\r\n\r\n[![Coverage Report](https://img.shields.io/badge/Coverage_Report-Available-blue.svg)](http://preceptorjs.github.io/grunt-kobold/coverage/lcov-report/)\r\n[![API Documentation](https://img.shields.io/badge/API_Documentation-Available-blue.svg)](http://preceptorjs.github.io/grunt-kobold/docs/)\r\n\r\n[![Gitter Support](https://img.shields.io/badge/Support-Gitter_IM-yellow.svg)](https://gitter.im/preceptorjs/support)\r\n\r\n\r\n**Table of Contents**\r\n* [Installation](#installation)\r\n* [Getting Started](#getting-started)\r\n* [The \"kobold\" Task](#the-kobold-task)\r\n    * [Overview](#overview)\r\n    * [Options](#options)\r\n    * [Usage Examples](#usage-examples)\r\n* [Third-party libraries](#third-party-libraries)\r\n* [License](#license)\r\n\r\n\r\n##Installation\r\n\r\nInstall this module with the following command:\r\n```shell\r\nnpm install grunt-kobold\r\n```\r\n\r\nAdd the module to your ```package.json``` dependencies:\r\n```shell\r\nnpm install --save grunt-kobold\r\n```\r\nAdd the module to your ```package.json``` dev-dependencies:\r\n```shell\r\nnpm install --save-dev grunt-kobold\r\n```\r\n\r\nThis plugin requires Grunt.\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins.\r\n\r\n\r\n## Getting Started\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```javascript\r\ngrunt.loadNpmTasks('grunt-kobold');\r\n```\r\n\r\n## The \"kobold\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `kobold` to the data object passed into `grunt.initConfig()`.\r\n\r\n```javascript\r\ngrunt.initConfig({\r\n\tkobold: {\r\n\t\tyour_target: {\r\n\t\t\t// Target-specific Kobold options go here.\r\n\t\t},\r\n\t},\r\n})\r\n```\r\n\r\n\r\n### Options\r\n\r\n#### options.config\r\nType: `Object` --optional--\r\n\r\nOptions that would be otherwise in the global config file. \r\nYou can also require the js or json file instead of adding here all the configurations.\r\n\r\n#### options.mochaArgs\r\nType: `String[]` --optional--\r\n\r\nList of Mocha arguments that will be passed-through.\r\n\r\n#### options.approvedFolder\r\nType: `String` --optional-- (default: 'approved')\r\n\r\nName of the approved folder where Images are defined as approved and how the build images should look like. This can also be the path to a folder.\r\n\r\n#### options.buildFolder\r\nType: `String` --optional-- (default: 'build')\r\n\r\nName of the build folder that holds the most recent build images, taken to be compared to the approved images. This can also be the path to a folder.\r\n\r\n#### options.highlightFolder\r\nType: `String` --optional-- (default: 'highlight')\r\n\r\nName of the highlight folder that will be used as the result folder, showing all the differences found during visual regression tests. This can also be the path to a folder.\r\n\r\n#### options.configFolder\r\nType: `String` --optional-- (default: 'config')\r\n\r\nName of the config folder that describes image specific configurations the overwrite global configuration options that were given with the ```config``` property above. This can also be the path to a folder.\r\n\r\n#### options.failOrphans\r\nType: `Boolean` --optional-- (default: false)\r\n\r\nDefines if a test should fail when a previously approved images is missing from the current build images. This might happen if not all the screenshots could be taken due to an error, or it might simply be removed from the test-cases.\r\n\r\n#### options.failAdditions\r\nType: `Boolean` --optional-- (default: false)\r\n\r\nDefines if a test should fail when a previously unseen image appears in the build images. You might want to fail these tests to manually approve them; if they are not approved, then they will never be really compared.\r\n\r\n#### options.testPath\r\nType: `String` --optional-- (default: current working directory)\r\n\r\nPath to directory holding all the test-folders (i.e. ```approved```, ```build```, ```highlight```, and ```config```).\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\n\r\nYou can supply the configuration in the options object of a task:\r\n\r\n```javascript\r\ngrunt.initConfig({\r\n\tkobold: {\r\n\t\tci: {\r\n\t\t\toptions: {\r\n\t\t\t\tconfig: require('./config.js')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n```\r\n\r\n#### Inline Options \r\n\r\nYou can supply the configuration inline in the options object of a task:\r\n\r\n```javascript\r\ngrunt.initConfig({\r\n\tkobold: {\r\n\t\tci: {\r\n\t\t\toptions: {\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\t\"outputBackgroundGreen\": 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n```\r\n\r\nHere another example, but with more options:\r\n\r\n```javascript\r\ngrunt.initConfig({\r\n\r\n\tkobold: {\r\n  \r\n\t\tci: {\r\n\t\t\toptions: {\r\n\t\t\t\tconfig: {\r\n\t\t\t\t\t\"outputBackgroundGreen\": 255\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\thighlightFolder: \"result\",\r\n\t\t\t\t\r\n\t\t\t\tfailOrphans: true,\r\n\t\t\t\tfailAdditions: true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})\r\n```\r\n\r\n##Third-party libraries\r\n\r\nThe following third-party libraries are used by this module:\r\n\r\n###Dependencies\r\n* kobold: [https://github.com/yahoo/kobold](https://github.com/yahoo/kobold)\r\n\r\n###Dev-Dependencies\r\n* grunt: [http://gruntjs.com](http://gruntjs.com)\r\n* chai: [http://chaijs.com](http://chaijs.com)\r\n* codeclimate-test-reporter: [https://github.com/codeclimate/javascript-test-reporter](https://github.com/codeclimate/javascript-test-reporter)\r\n* coveralls: [https://github.com/cainus/node-coveralls](https://github.com/cainus/node-coveralls)\r\n* istanbul: [https://github.com/gotwarlost/istanbul](https://github.com/gotwarlost/istanbul)\r\n* mocha: [https://github.com/visionmedia/mocha](https://github.com/visionmedia/mocha)\r\n* sinon: [http://sinonjs.org](http://sinonjs.org)\r\n* sinon-chai: [https://github.com/domenic/sinon-chai](https://github.com/domenic/sinon-chai)\r\n* yuidocjs: [https://github.com/yui/yuidoc](https://github.com/yui/yuidoc)\r\n\r\n##License\r\n\r\nThe MIT License\r\n\r\nCopyright 2015 Marcel Erz\r\n","google":"UA-61373326-3","note":"Don't delete this file! It's used internally to help with page regeneration."}